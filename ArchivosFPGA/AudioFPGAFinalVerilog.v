// Code generated by Icestudio 0.6.0
// Sat, 04 Sep 2021 04:39:25 GMT

`default_nettype none

//---- Top entity
module main #(
 parameter v68eb3e = 'h07,
 parameter v39daf3 = 'h7D,
 parameter v079d98 = 'h08,
 parameter v360bc2 = 'h03,
 parameter v9ca2f8 = 'h7E,
 parameter v510316 = 'h7F,
 parameter vaabf8f = 'h0,
 parameter v7b082d = 96000,
 parameter v4d7020 = 'h09,
 parameter v5bdaa5 = 65535/2,
 parameter v2d4700 = 'h01,
 parameter v9caf1a = 'h0,
 parameter v1aba34 = 'h06,
 parameter v41a0e5 = 'h02,
 parameter v2ad8f5 = 58000,
 parameter ve97920 = 'h0,
 parameter vf9b723 = 58000,
 parameter vee518e = 'h04,
 parameter vfbfaa7 = 'h0,
 parameter va1d0e6 = 'h0A,
 parameter v715e2f = 'h05,
 parameter vc235dc = 'h0B,
 parameter v9255da = 'h0C
) (
 input vb76aa4,
 input v95931c,
 input v12f7d7,
 input vclk,
 output vf33ddb
);
 localparam p0 = v5bdaa5;
 localparam p3 = v2ad8f5;
 localparam p9 = v39daf3;
 localparam p10 = v9ca2f8;
 localparam p11 = v510316;
 localparam p17 = v2d4700;
 localparam p18 = v9caf1a;
 localparam p19 = v41a0e5;
 localparam p20 = ve97920;
 localparam p24 = v360bc2;
 localparam p25 = vaabf8f;
 localparam p28 = vee518e;
 localparam p29 = vfbfaa7;
 localparam p32 = v715e2f;
 localparam p34 = v7b082d;
 localparam p41 = v1aba34;
 localparam p43 = v68eb3e;
 localparam p44 = v079d98;
 localparam p45 = v4d7020;
 localparam p49 = vf9b723;
 localparam p60 = va1d0e6;
 localparam p61 = vc235dc;
 localparam p62 = v9255da;
 wire w1;
 wire w2;
 wire [0:16] w4;
 wire w5;
 wire w6;
 wire w7;
 wire w8;
 wire w12;
 wire [0:7] w13;
 wire w14;
 wire w15;
 wire w16;
 wire [0:7] w21;
 wire [0:7] w22;
 wire [0:15] w23;
 wire [0:7] w26;
 wire w27;
 wire [0:7] w30;
 wire w31;
 wire [0:16] w33;
 wire [0:16] w35;
 wire [0:16] w36;
 wire [0:16] w37;
 wire w38;
 wire w39;
 wire [0:6] w40;
 wire w42;
 wire w46;
 wire [0:6] w47;
 wire w48;
 wire w50;
 wire [0:6] w51;
 wire w52;
 wire [0:16] w53;
 wire w54;
 wire w55;
 wire [0:6] w56;
 wire [0:16] w57;
 wire [0:16] w58;
 wire [0:16] w59;
 wire w63;
 wire w64;
 wire w65;
 wire w66;
 wire [0:3] w67;
 wire w68;
 wire w69;
 wire w70;
 wire w71;
 wire w72;
 wire w73;
 wire [0:6] w74;
 wire [0:7] w75;
 wire [0:7] w76;
 wire [0:7] w77;
 wire [0:7] w78;
 wire [0:7] w79;
 wire [0:7] w80;
 wire w81;
 wire w82;
 wire w83;
 wire w84;
 wire w85;
 wire w86;
 wire w87;
 wire w88;
 wire w89;
 wire w90;
 wire w91;
 wire w92;
 wire w93;
 wire [0:7] w94;
 wire [0:7] w95;
 wire [0:7] w96;
 wire [0:7] w97;
 wire [0:7] w98;
 wire [0:7] w99;
 wire [0:7] w100;
 wire [0:7] w101;
 wire [0:7] w102;
 wire [0:7] w103;
 wire [0:7] w104;
 wire [0:7] w105;
 wire [0:7] w106;
 wire [0:7] w107;
 wire [0:7] w108;
 wire [0:7] w109;
 wire [0:7] w110;
 wire [0:7] w111;
 wire w112;
 wire w113;
 wire w114;
 wire w115;
 wire w116;
 wire w117;
 wire w118;
 wire [0:7] w119;
 wire [0:7] w120;
 wire w121;
 wire [0:7] w122;
 wire [0:7] w123;
 wire w124;
 wire w125;
 wire w126;
 wire [0:7] w127;
 wire [0:7] w128;
 wire [0:7] w129;
 wire w130;
 wire w131;
 wire [0:7] w132;
 wire [0:7] w133;
 wire [0:7] w134;
 wire [0:7] w135;
 wire w136;
 wire w137;
 wire w138;
 wire w139;
 assign vf33ddb = w5;
 assign w6 = v12f7d7;
 assign w7 = vb76aa4;
 assign w8 = v95931c;
 assign w83 = vclk;
 assign w84 = vclk;
 assign w85 = vclk;
 assign w86 = vclk;
 assign w87 = vclk;
 assign w88 = vclk;
 assign w89 = vclk;
 assign w90 = vclk;
 assign w16 = w2;
 assign w35 = w33;
 assign w36 = w33;
 assign w36 = w35;
 assign w37 = w33;
 assign w37 = w35;
 assign w37 = w36;
 assign w57 = w4;
 assign w58 = w4;
 assign w58 = w57;
 assign w59 = w4;
 assign w59 = w57;
 assign w59 = w58;
 assign w69 = w68;
 assign w70 = w68;
 assign w70 = w69;
 assign w71 = w68;
 assign w71 = w69;
 assign w71 = w70;
 assign w73 = w42;
 assign w76 = w75;
 assign w77 = w75;
 assign w77 = w76;
 assign w78 = w75;
 assign w78 = w76;
 assign w78 = w77;
 assign w80 = w75;
 assign w80 = w76;
 assign w80 = w77;
 assign w80 = w78;
 assign w84 = w83;
 assign w85 = w83;
 assign w85 = w84;
 assign w86 = w83;
 assign w86 = w84;
 assign w86 = w85;
 assign w87 = w83;
 assign w87 = w84;
 assign w87 = w85;
 assign w87 = w86;
 assign w88 = w83;
 assign w88 = w84;
 assign w88 = w85;
 assign w88 = w86;
 assign w88 = w87;
 assign w89 = w83;
 assign w89 = w84;
 assign w89 = w85;
 assign w89 = w86;
 assign w89 = w87;
 assign w89 = w88;
 assign w90 = w83;
 assign w90 = w84;
 assign w90 = w85;
 assign w90 = w86;
 assign w90 = w87;
 assign w90 = w88;
 assign w90 = w89;
 assign w92 = w91;
 assign w93 = w91;
 assign w93 = w92;
 assign w95 = w94;
 assign w96 = w94;
 assign w96 = w95;
 assign w97 = w94;
 assign w97 = w95;
 assign w97 = w96;
 assign w98 = w94;
 assign w98 = w95;
 assign w98 = w96;
 assign w98 = w97;
 assign w99 = w94;
 assign w99 = w95;
 assign w99 = w96;
 assign w99 = w97;
 assign w99 = w98;
 assign w100 = w94;
 assign w100 = w95;
 assign w100 = w96;
 assign w100 = w97;
 assign w100 = w98;
 assign w100 = w99;
 assign w101 = w94;
 assign w101 = w95;
 assign w101 = w96;
 assign w101 = w97;
 assign w101 = w98;
 assign w101 = w99;
 assign w101 = w100;
 assign w102 = w94;
 assign w102 = w95;
 assign w102 = w96;
 assign w102 = w97;
 assign w102 = w98;
 assign w102 = w99;
 assign w102 = w100;
 assign w102 = w101;
 assign w103 = w94;
 assign w103 = w95;
 assign w103 = w96;
 assign w103 = w97;
 assign w103 = w98;
 assign w103 = w99;
 assign w103 = w100;
 assign w103 = w101;
 assign w103 = w102;
 assign w104 = w94;
 assign w104 = w95;
 assign w104 = w96;
 assign w104 = w97;
 assign w104 = w98;
 assign w104 = w99;
 assign w104 = w100;
 assign w104 = w101;
 assign w104 = w102;
 assign w104 = w103;
 assign w105 = w94;
 assign w105 = w95;
 assign w105 = w96;
 assign w105 = w97;
 assign w105 = w98;
 assign w105 = w99;
 assign w105 = w100;
 assign w105 = w101;
 assign w105 = w102;
 assign w105 = w103;
 assign w105 = w104;
 assign w106 = w22;
 assign w108 = w107;
 assign w109 = w107;
 assign w109 = w108;
 assign w110 = w107;
 assign w110 = w108;
 assign w110 = w109;
 assign w111 = w30;
 assign w114 = w113;
 assign w115 = w113;
 assign w115 = w114;
 assign w116 = w113;
 assign w116 = w114;
 assign w116 = w115;
 assign w119 = w21;
 assign w127 = w26;
 v5d13fa v25ee04 (
  .v425d4f(w5),
  .v6ed3a5(w6),
  .v31cdf6(w7),
  .v817c2f(w8),
  .v3b3009(w12),
  .v97ccb8(w13),
  .vad23b3(w14),
  .ve95ec3(w83),
  .v3ea718(w118),
  .v6f741b(w120)
 );
 v8d4ef5 v794e9f (
  .v7c533e(w2),
  .v567bdb(w4),
  .vdd729a(w84),
  .ve61673(w91)
 );
 v958b63 #(
  .v16d6b8(p0)
 ) v4bb6b7 (
  .v18e78c(w1),
  .v310974(w23)
 );
 vb2090f vc705a8 (
  .v0e28cb(w1),
  .vcbab45(w2),
  .v3ca442(w15)
 );
 main_vdb8693 #(
  .B(p3)
 ) vdb8693 (
  .a(w4),
  .sal(w48)
 );
 v559280 #(
  .v42c7c5(p9),
  .v7575b9(p10),
  .v9ab44c(p11)
 ) vcb931c (
  .v259f44(w12),
  .v3cfc83(w13),
  .v30fe77(w14),
  .v959b18(w85),
  .vd19329(w94),
  .v2d1a47(w107),
  .v44b0f1(w113),
  .vc76f75(w118)
 );
 v1b3913 v53eb75 (
  .v3487af(w15),
  .ve78ab8(w27),
  .ved8395(w86)
 );
 va2a3e2 #(
  .vafbb99(p17),
  .v52eb18(p18)
 ) v58fb91 (
  .v4daed0(w21),
  .v8a8aab(w87),
  .v3c6759(w95),
  .v1bec6c(w108),
  .vc186e3(w114),
  .v8badf8(w121)
 );
 main_vcb2712 vcb2712 (
  .subida(w16),
  .sal(w53),
  .reseteo(w92)
 );
 va2a3e2 #(
  .vafbb99(p19),
  .v52eb18(p20)
 ) v2b5ca9 (
  .v4daed0(w22),
  .v8a8aab(w88),
  .v3c6759(w94),
  .v1bec6c(w107),
  .v8badf8(w112),
  .vc186e3(w113)
 );
 v1e224f v44800e (
  .v385b9c(w21),
  .vd34531(w22),
  .v4d4dee(w23)
 );
 va2a3e2 #(
  .vafbb99(p24),
  .v52eb18(p25)
 ) v04164a (
  .v4daed0(w26),
  .v8a8aab(w89),
  .v3c6759(w100),
  .v1bec6c(w110),
  .vc186e3(w116),
  .v8badf8(w130)
 );
 vec5121 v2bc126 (
  .vdf5b7a(w26),
  .v7ff276(w27)
 );
 va2a3e2 #(
  .vafbb99(p28),
  .v52eb18(p29)
 ) v8a185a (
  .v4daed0(w30),
  .v8a8aab(w90),
  .v3c6759(w96),
  .v1bec6c(w109),
  .vc186e3(w115),
  .v8badf8(w117)
 );
 vec5121 v6f3a37 (
  .vdf5b7a(w30),
  .v7ff276(w91)
 );
 v816138 v086851 (
  .vcbab45(w31),
  .v0e28cb(w42),
  .v3ca442(w93)
 );
 vca7316 #(
  .v6b316b(p32)
 ) v7163aa (
  .v40cb98(w101),
  .v18e78c(w131)
 );
 main_v068e44 v068e44 (
  .reset(w31),
  .Ndato(w33)
 );
 main_v2cbf8c #(
  .B(p34)
 ) v2cbf8c (
  .a(w33),
  .sal(w42)
 );
 main_v6667aa v6667aa (
  .A(w35),
  .Sal(w134)
 );
 main_v7145e0 v7145e0 (
  .A(w36),
  .Sal(w135)
 );
 v6c897b v2678de (
  .v043efe(w37),
  .v182382(w38)
 );
 v6348d5 v2e749a (
  .v428b2b(w38),
  .vcff9d0(w40),
  .v869a97(w133)
 );
 v3806a2 vce124b (
  .v1bb711(w39),
  .v1438d5(w40)
 );
 v21cfcc vad7593 (
  .v9fb85f(w39)
 );
 vca7316 #(
  .v6b316b(p41)
 ) vea1690 (
  .v40cb98(w102),
  .v18e78c(w138)
 );
 vca7316 #(
  .v6b316b(p43)
 ) ve0988f (
  .v40cb98(w103),
  .v18e78c(w139)
 );
 vca7316 #(
  .v6b316b(p44)
 ) v757b03 (
  .v40cb98(w104),
  .v18e78c(w137)
 );
 vca7316 #(
  .v6b316b(p45)
 ) v2d0a32 (
  .v40cb98(w105),
  .v18e78c(w136)
 );
 v6348d5 ve5b4e1 (
  .vcff9d0(w47),
  .v428b2b(w48),
  .v869a97(w129)
 );
 v3806a2 vc82a58 (
  .v1bb711(w46),
  .v1438d5(w47)
 );
 v21cfcc v5f6439 (
  .v9fb85f(w46)
 );
 main_v349d76 #(
  .B(p49)
 ) v349d76 (
  .sal(w50),
  .a(w53)
 );
 v6348d5 vb34028 (
  .v428b2b(w50),
  .vcff9d0(w51)
 );
 v3806a2 v80d603 (
  .v1438d5(w51),
  .v1bb711(w52)
 );
 v21cfcc vbe7104 (
  .v9fb85f(w52)
 );
 main_v5f5cd8 v5f5cd8 (
  .A(w57),
  .Sal(w122)
 );
 main_v55e614 v55e614 (
  .A(w58),
  .Sal(w123)
 );
 v6c897b v7e9fc6 (
  .v182382(w54),
  .v043efe(w59)
 );
 v6348d5 v121b80 (
  .v428b2b(w54),
  .vcff9d0(w56),
  .v869a97(w128)
 );
 v3806a2 v3192a3 (
  .v1bb711(w55),
  .v1438d5(w56)
 );
 v21cfcc vdac205 (
  .v9fb85f(w55)
 );
 vca7316 #(
  .v6b316b(p60)
 ) vd5cbc8 (
  .v40cb98(w97),
  .v18e78c(w124)
 );
 vca7316 #(
  .v6b316b(p61)
 ) v6a2941 (
  .v40cb98(w98),
  .v18e78c(w125)
 );
 vca7316 #(
  .v6b316b(p62)
 ) vc92f74 (
  .v40cb98(w99),
  .v18e78c(w126)
 );
 v49d51e v0553d0 (
  .ve81325(w67),
  .vb6bab2(w75),
  .vd48707(w76),
  .vb4ed69(w77),
  .v732d31(w78),
  .v3fb88b(w79),
  .v062092(w106),
  .vbdd51f(w111),
  .v3d1227(w119),
  .v31c944(w122),
  .vcd2a33(w123),
  .v21e136(w127),
  .v3f3f35(w128),
  .v30db33(w129),
  .v9b8a50(w132),
  .v06410a(w133),
  .va541fd(w134),
  .v71c62f(w135)
 );
 vb462e4 ve3d511 (
  .v2d9b9d(w63),
  .v4ad97f(w64),
  .va7d459(w65),
  .ve45ae4(w66),
  .v9a20a6(w68),
  .v684eff(w69),
  .vd30424(w70),
  .v5d4ab5(w71),
  .va21f9e(w81),
  .v392f5c(w112),
  .vaf960e(w117),
  .v35bfa0(w121),
  .v7d69a8(w124),
  .v2b3528(w125),
  .v8fc551(w126),
  .v7d2dbf(w130),
  .veb3957(w131),
  .v94931a(w136),
  .v9cada5(w137),
  .vaedeed(w138),
  .v19749c(w139)
 );
 v2d3bcd v70cbb5 (
  .v6bcf15(w63),
  .vaba134(w64),
  .v340700(w65),
  .vd4cf0c(w66),
  .vd9c4aa(w67)
 );
 v21cfcc v39b842 (
  .v9fb85f(w68)
 );
 v3806a2 v9b344f (
  .v1bb711(w72),
  .v1438d5(w74)
 );
 v21cfcc v836e7b (
  .v9fb85f(w72)
 );
 v6348d5 v11fbdf (
  .v428b2b(w73),
  .vcff9d0(w74),
  .v869a97(w132)
 );
 main_v0b670a v0b670a (
  .Char(w75)
 );
 v359a55 vb152fa (
  .vd6b984(w79),
  .v02d898(w80),
  .v50d6c6(w82),
  .vf24dba(w120)
 );
 v35f267 v81e741 (
  .v0e28cb(w81),
  .vcbab45(w82)
 );
endmodule

/*-------------------------------------------------*/
/*--   */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- 
/*-------------------------------------------------*/
//---- Top entity
module v5d13fa (
 input ve95ec3,
 input v31cdf6,
 input v817c2f,
 input v6ed3a5,
 input [7:0] v6f741b,
 input v3ea718,
 output v425d4f,
 output vad23b3,
 output [7:0] v97ccb8,
 output v3b3009
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 wire w4;
 wire [0:7] w5;
 wire w6;
 wire w7;
 wire [0:7] w8;
 wire [0:7] w9;
 wire w10;
 wire w11;
 wire w12;
 wire w13;
 wire w14;
 wire w15;
 wire w16;
 wire w17;
 wire w18;
 wire w19;
 wire w20;
 wire [0:7] w21;
 wire w22;
 wire w23;
 wire w24;
 wire w25;
 wire w26;
 wire w27;
 wire w28;
 wire w29;
 wire w30;
 wire w31;
 wire w32;
 wire w33;
 wire w34;
 wire w35;
 wire w36;
 wire w37;
 wire w38;
 wire w39;
 wire w40;
 wire w41;
 wire w42;
 wire w43;
 assign w0 = v6ed3a5;
 assign w1 = v817c2f;
 assign w2 = v31cdf6;
 assign v97ccb8 = w8;
 assign v3b3009 = w10;
 assign w13 = ve95ec3;
 assign w14 = ve95ec3;
 assign w15 = ve95ec3;
 assign w16 = ve95ec3;
 assign w20 = v3ea718;
 assign w21 = v6f741b;
 assign v425d4f = w24;
 assign w25 = ve95ec3;
 assign w26 = ve95ec3;
 assign w27 = ve95ec3;
 assign w28 = ve95ec3;
 assign w29 = ve95ec3;
 assign w30 = ve95ec3;
 assign w31 = ve95ec3;
 assign w32 = ve95ec3;
 assign w33 = ve95ec3;
 assign vad23b3 = w39;
 assign w7 = w6;
 assign w14 = w13;
 assign w15 = w13;
 assign w15 = w14;
 assign w16 = w13;
 assign w16 = w14;
 assign w16 = w15;
 assign w25 = w13;
 assign w25 = w14;
 assign w25 = w15;
 assign w25 = w16;
 assign w26 = w13;
 assign w26 = w14;
 assign w26 = w15;
 assign w26 = w16;
 assign w26 = w25;
 assign w27 = w13;
 assign w27 = w14;
 assign w27 = w15;
 assign w27 = w16;
 assign w27 = w25;
 assign w27 = w26;
 assign w28 = w13;
 assign w28 = w14;
 assign w28 = w15;
 assign w28 = w16;
 assign w28 = w25;
 assign w28 = w26;
 assign w28 = w27;
 assign w29 = w13;
 assign w29 = w14;
 assign w29 = w15;
 assign w29 = w16;
 assign w29 = w25;
 assign w29 = w26;
 assign w29 = w27;
 assign w29 = w28;
 assign w30 = w13;
 assign w30 = w14;
 assign w30 = w15;
 assign w30 = w16;
 assign w30 = w25;
 assign w30 = w26;
 assign w30 = w27;
 assign w30 = w28;
 assign w30 = w29;
 assign w31 = w13;
 assign w31 = w14;
 assign w31 = w15;
 assign w31 = w16;
 assign w31 = w25;
 assign w31 = w26;
 assign w31 = w27;
 assign w31 = w28;
 assign w31 = w29;
 assign w31 = w30;
 assign w32 = w13;
 assign w32 = w14;
 assign w32 = w15;
 assign w32 = w16;
 assign w32 = w25;
 assign w32 = w26;
 assign w32 = w27;
 assign w32 = w28;
 assign w32 = w29;
 assign w32 = w30;
 assign w32 = w31;
 assign w33 = w13;
 assign w33 = w14;
 assign w33 = w15;
 assign w33 = w16;
 assign w33 = w25;
 assign w33 = w26;
 assign w33 = w27;
 assign w33 = w28;
 assign w33 = w29;
 assign w33 = w30;
 assign w33 = w31;
 assign w33 = w32;
 assign w36 = w35;
 assign w37 = w35;
 assign w37 = w36;
 assign w38 = w4;
 assign w39 = w11;
 assign w40 = w11;
 assign w40 = w39;
 assign w41 = w11;
 assign w41 = w39;
 assign w41 = w40;
 assign w43 = w10;
 v3bfe20 vfdfcf6 (
  .ve7f5e6(w0),
  .v3c12b5(w11),
  .v717e81(w15)
 );
 v3bfe20 v8f5990 (
  .ve7f5e6(w1),
  .v3c12b5(w12),
  .v717e81(w14)
 );
 v3bfe20 ve3fbb1 (
  .ve7f5e6(w2),
  .v717e81(w13),
  .v3c12b5(w34)
 );
 v56e0da v2e9a92 (
  .vd50ef8(w5),
  .v54c0b0(w27),
  .v4fef26(w34),
  .v8fcf35(w35)
 );
 v8e2728 v867237 (
  .v2dffca(w3),
  .v10eedb(w12),
  .v0884a0(w16)
 );
 vb2090f v90dae1 (
  .v0e28cb(w3),
  .v3ca442(w4),
  .vcbab45(w35)
 );
 v35f267 vcab8a4 (
  .vcbab45(w4),
  .v0e28cb(w11)
 );
 v89d234 ve8c9fd (
  .v39f831(w5),
  .vf892a0(w6),
  .vb1c024(w8),
  .v41eb95(w28)
 );
 v117a33 v4e6999 (
  .v712cd1(w6),
  .vdd729a(w31),
  .v7c533e(w37),
  .ve61673(w40)
 );
 v1c7dae ve81961 (
  .vf54559(w7),
  .ve8318d(w10),
  .va4102a(w32)
 );
 v53847c v08b511 (
  .v67ccbf(w9),
  .v3ba3e6(w17),
  .v9bfaa9(w19),
  .v4a6801(w25),
  .v7d29fb(w36),
  .v0d3330(w42)
 );
 v89d234 vab60d7 (
  .vb1c024(w9),
  .vf892a0(w20),
  .v39f831(w21),
  .v41eb95(w26)
 );
 v21cfcc vc635f5 (
  .v9fb85f(w17)
 );
 v7eacdf vb97edc (
  .v2dffca(w18),
  .v0884a0(w29),
  .v10eedb(w41)
 );
 v816138 v6e906f (
  .v0e28cb(w18),
  .vcbab45(w19),
  .v3ca442(w23)
 );
 v1c7dae v2fff92 (
  .ve8318d(w22),
  .va4102a(w30),
  .vf54559(w43)
 );
 v529da2 v7aa20c (
  .vf54559(w22),
  .ve8318d(w23),
  .va4102a(w33)
 );
 vd7e6ff v30306b (
  .v341fc3(w24),
  .v248807(w38),
  .vba979e(w42)
 );
endmodule

/*-------------------------------------------------*/
/*-- spi-slave-unit  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Unidad SPI sclava. Transmisor y receptor
/*-------------------------------------------------*/
//---- Top entity
module v3bfe20 (
 input v717e81,
 input ve7f5e6,
 output v3c12b5
);
 wire w0;
 wire w1;
 wire w2;
 assign w0 = ve7f5e6;
 assign w1 = v717e81;
 assign v3c12b5 = w2;
 v3bfe20_v683a9f v683a9f (
  .i(w0),
  .clk(w1),
  .o(w2)
 );
endmodule

/*-------------------------------------------------*/
/*-- Sync  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Sincronizar las entradas de datos con el reloj del sistema
/*-------------------------------------------------*/

module v3bfe20_v683a9f (
 input clk,
 input i,
 output o
);
 // Sincronizacion. Evitar 
 // problema de la metaestabilidad
 
 reg d1;
 reg d2;
 
 always @(posedge clk)
  d1 <= i;
  
 always @(posedge clk)
   d2 <= d1;
   
 assign o = d2;
endmodule
//---- Top entity
module v56e0da #(
 parameter v27bfca = 0
) (
 input v54c0b0,
 input v4fef26,
 input v8fcf35,
 output v0d3330,
 output [7:0] vd50ef8
);
 localparam p0 = v27bfca;
 wire w1;
 wire w2;
 wire w3;
 wire w4;
 wire [0:7] w5;
 assign v0d3330 = w1;
 assign w2 = v4fef26;
 assign w3 = v8fcf35;
 assign w4 = v54c0b0;
 assign vd50ef8 = w5;
 v56e0da_v56d51d #(
  .INI(p0)
 ) v56d51d (
  .so(w1),
  .si(w2),
  .shift(w3),
  .clk(w4),
  .q(w5)
 );
endmodule

/*-------------------------------------------------*/
/*-- Registro-desplazamiento  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Registro de desplazamiento (izquierda) de 8 bits
/*-------------------------------------------------*/

module v56e0da_v56d51d #(
 parameter INI = 0
) (
 input clk,
 input si,
 input shift,
 output so,
 output [7:0] q
);
 //-- Numero de bits el registros de desplazamiento
 localparam N = 8;
 
 reg [N-1:0] q = INI;
 
 always @(posedge clk)
   if (shift)
     q <= {q[N-2:0], si};
     
 //-- Sacar el bit de mayor peso por serial-out    
 assign so = q[N-1];
endmodule
//---- Top entity
module v8e2728 (
 input v0884a0,
 input v10eedb,
 output v2dffca
);
 wire w0;
 wire w1;
 wire w2;
 assign w0 = v10eedb;
 assign v2dffca = w1;
 assign w2 = v0884a0;
 v8e2728_v115ffb v115ffb (
  .i(w0),
  .o(w1),
  .clk(w2)
 );
endmodule

/*-------------------------------------------------*/
/*-- Subida  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Detector de flanco de subida. Emite un tic cuando detecta un flanco ascendente
/*-------------------------------------------------*/

module v8e2728_v115ffb (
 input clk,
 input i,
 output o
);
 reg q = 0;
 
 always @(posedge clk)
   q <= i;
   
 assign o = (~q & i);  
endmodule
//---- Top entity
module vb2090f (
 input v0e28cb,
 input v3ca442,
 output vcbab45
);
 wire w0;
 wire w1;
 wire w2;
 assign w0 = v0e28cb;
 assign w1 = v3ca442;
 assign vcbab45 = w2;
 vb2090f_vf4938a vf4938a (
  .a(w0),
  .b(w1),
  .c(w2)
 );
endmodule

/*-------------------------------------------------*/
/*-- AND  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Puerta AND
/*-------------------------------------------------*/

module vb2090f_vf4938a (
 input a,
 input b,
 output c
);
 //-- Puerta AND
 
 //-- module and (input wire a, input wire b,
 //--             output wire c);
 
 assign c = a & b;
 
 //-- endmodule
endmodule
//---- Top entity
module v35f267 (
 input v0e28cb,
 output vcbab45
);
 wire w0;
 wire w1;
 assign w0 = v0e28cb;
 assign vcbab45 = w1;
 v35f267_vd54ca1 vd54ca1 (
  .a(w0),
  .c(w1)
 );
endmodule

/*-------------------------------------------------*/
/*-- NOT  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Puerta NOT
/*-------------------------------------------------*/

module v35f267_vd54ca1 (
 input a,
 output c
);
 //-- Puerta NOT
 
 //-- module (input wire a, output wire c);
 
 
 assign c = ~a;
 
 
 //-- endmodule
 
endmodule
//---- Top entity
module v89d234 #(
 parameter v422d28 = 0
) (
 input v41eb95,
 input [7:0] v39f831,
 input vf892a0,
 output [7:0] vb1c024
);
 localparam p0 = v422d28;
 wire [0:7] w1;
 wire [0:7] w2;
 wire w3;
 wire w4;
 assign vb1c024 = w1;
 assign w2 = v39f831;
 assign w3 = vf892a0;
 assign w4 = v41eb95;
 v89d234_v9148cb #(
  .INI(p0)
 ) v9148cb (
  .q(w1),
  .d(w2),
  .load(w3),
  .clk(w4)
 );
endmodule

/*-------------------------------------------------*/
/*-- Registro  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Registro de 8 bits
/*-------------------------------------------------*/

module v89d234_v9148cb #(
 parameter INI = 0
) (
 input clk,
 input [7:0] d,
 input load,
 output [7:0] q
);
 localparam N = 8;
 
 reg [N-1:0] q = INI;
 
 always @(posedge clk)
   if (load)
     q <= d;
endmodule
//---- Top entity
module v117a33 #(
 parameter v5e4a03 = 8
) (
 input vdd729a,
 input ve61673,
 input v7c533e,
 output [2:0] vf4a676,
 output v712cd1
);
 localparam p1 = v5e4a03;
 wire w0;
 wire w2;
 wire w3;
 wire w4;
 wire [0:2] w5;
 assign w0 = ve61673;
 assign w2 = v7c533e;
 assign w3 = vdd729a;
 assign v712cd1 = w4;
 assign vf4a676 = w5;
 v117a33_vbd6086 #(
  .M(p1)
 ) vbd6086 (
  .rst(w0),
  .cnt(w2),
  .clk(w3),
  .ov(w4),
  .q(w5)
 );
endmodule

/*-------------------------------------------------*/
/*-- Contador-3bits-up-rst  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Contador módulo M, ascendente, de 3 bits, con reset 
/*-------------------------------------------------*/

module v117a33_vbd6086 #(
 parameter M = 0
) (
 input clk,
 input rst,
 input cnt,
 output [2:0] q,
 output ov
);
 //-- Numero de bits del contador
 localparam N = 3; 
 
 //-- En contadores de N bits:
 //-- M = 2 ** N
 
 //-- Internamente usamos un bit mas
 //-- (N+1) bits
 reg [N:0] qi = 0;
 
 always @(posedge clk)
   if (rst | ov)
     qi <= 2'b00;
   else
     if (cnt)
       qi <= qi + 1;
       
 assign q = qi;
 
 //-- Comprobar overflow
 assign ov = (qi == M);
     
endmodule
//---- Top entity
module v1c7dae #(
 parameter v71e305 = 0
) (
 input va4102a,
 input vf54559,
 output ve8318d
);
 localparam p2 = v71e305;
 wire w0;
 wire w1;
 wire w3;
 assign w0 = va4102a;
 assign ve8318d = w1;
 assign w3 = vf54559;
 v1c7dae_vb8adf8 #(
  .INI(p2)
 ) vb8adf8 (
  .clk(w0),
  .q(w1),
  .d(w3)
 );
endmodule

/*-------------------------------------------------*/
/*-- Biestable-D  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Biestable de datos (Tipo D). Cuando se recibe un tic por load se captura el dato
/*-------------------------------------------------*/

module v1c7dae_vb8adf8 #(
 parameter INI = 0
) (
 input clk,
 input d,
 output q
);
 reg q = INI;
 always @(posedge clk)
   q <= d;
endmodule
//---- Top entity
module v53847c #(
 parameter vc96e81 = 0
) (
 input v4a6801,
 input v3ba3e6,
 input [7:0] v67ccbf,
 input v9bfaa9,
 input v7d29fb,
 output v0d3330,
 output [7:0] vd50ef8
);
 localparam p0 = vc96e81;
 wire [0:7] w1;
 wire w2;
 wire w3;
 wire [0:7] w4;
 wire w5;
 wire w6;
 wire w7;
 assign vd50ef8 = w1;
 assign w2 = v4a6801;
 assign w3 = v3ba3e6;
 assign w4 = v67ccbf;
 assign w5 = v7d29fb;
 assign w6 = v9bfaa9;
 assign v0d3330 = w7;
 v53847c_v768248 #(
  .INI(p0)
 ) v768248 (
  .q(w1),
  .clk(w2),
  .si(w3),
  .d(w4),
  .shift(w5),
  .load(w6),
  .so(w7)
 );
endmodule

/*-------------------------------------------------*/
/*-- Registro-desplazamiento  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Registro de desplazamiento (izquierda) de 8 bits
/*-------------------------------------------------*/

module v53847c_v768248 #(
 parameter INI = 0
) (
 input clk,
 input si,
 input [7:0] d,
 input load,
 input shift,
 output so,
 output [7:0] q
);
 //-- Numero de bits el registros de desplazamiento
 localparam N = 8;
 
 reg [N-1:0] q = INI;
 
 always @(posedge clk)
   if (load)
     q <= d;
   else if (shift)
     q <= {q[N-2:0], si};
     
 //-- Sacar el bit de mayor peso por serial-out    
 assign so = q[N-1];
endmodule
//---- Top entity
module v21cfcc (
 output v9fb85f
);
 wire w0;
 assign v9fb85f = w0;
 v21cfcc_vb2eccd vb2eccd (
  .q(w0)
 );
endmodule

/*-------------------------------------------------*/
/*-- 0  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Un bit constante a 0
/*-------------------------------------------------*/

module v21cfcc_vb2eccd (
 output q
);
 //-- Bit constante a 0
 assign q = 1'b0;
 
 
endmodule
//---- Top entity
module v7eacdf (
 input v0884a0,
 input v10eedb,
 output v2dffca
);
 wire w0;
 wire w1;
 wire w2;
 assign w0 = v10eedb;
 assign v2dffca = w1;
 assign w2 = v0884a0;
 v7eacdf_v115ffb v115ffb (
  .i(w0),
  .o(w1),
  .clk(w2)
 );
endmodule

/*-------------------------------------------------*/
/*-- Bajada  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Detector de flanco de bajada. Emite un tic cuando detecta un flanco descendente
/*-------------------------------------------------*/

module v7eacdf_v115ffb (
 input clk,
 input i,
 output o
);
 reg q = 0;
 
 always @(posedge clk)
   q <= i;
   
 assign o = (q & ~i);  
endmodule
//---- Top entity
module v816138 (
 input v0e28cb,
 input v3ca442,
 output vcbab45
);
 wire w0;
 wire w1;
 wire w2;
 assign w0 = v0e28cb;
 assign w1 = v3ca442;
 assign vcbab45 = w2;
 v816138_vf4938a vf4938a (
  .a(w0),
  .b(w1),
  .c(w2)
 );
endmodule

/*-------------------------------------------------*/
/*-- OR  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Puerta OR
/*-------------------------------------------------*/

module v816138_vf4938a (
 input a,
 input b,
 output c
);
 //-- Puerta OR
 
 //-- module and (input wire a, input wire b,
 //--             output wire c);
 
 assign c = a | b;
 
 //-- endmodule
endmodule
//---- Top entity
module v529da2 #(
 parameter v71e305 = 0,
 parameter v793838 = 0
) (
 input va4102a,
 input vf54559,
 output ve8318d
);
 localparam p3 = v71e305;
 localparam p4 = v793838;
 wire w0;
 wire w1;
 wire w2;
 assign w0 = va4102a;
 assign ve8318d = w1;
 assign w2 = vf54559;
 v529da2_vb8adf8 #(
  .INI0(p3),
  .INI1(p4)
 ) vb8adf8 (
  .clk(w0),
  .q(w1),
  .d(w2)
 );
endmodule

/*-------------------------------------------------*/
/*-- Biestable-D-x2  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Dos Biestables de datos (Tipo D) encadenados
/*-------------------------------------------------*/

module v529da2_vb8adf8 #(
 parameter INI0 = 0,
 parameter INI1 = 0
) (
 input clk,
 input d,
 output q
);
 reg q0 = INI0;
 reg q1 = INI1;
 always @(posedge clk)
   q0 <= d;
   
 always @(posedge clk)
   q1 <= q0;
 
 //-- Salida  
 assign q = q1;  
endmodule
//---- Top entity
module vd7e6ff (
 input v248807,
 input vba979e,
 output v341fc3,
 output v790e82
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 assign w0 = v248807;
 assign w1 = vba979e;
 assign v790e82 = w2;
 assign v341fc3 = w3;
 vd7e6ff_v43ad2d v43ad2d (
  .oe(w0),
  .dout(w1),
  .din(w2),
  .pin(w3)
 );
endmodule

/*-------------------------------------------------*/
/*-- In-out-right  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Bloque inout, con conexión de pin por la derecha
/*-------------------------------------------------*/

module vd7e6ff_v43ad2d (
 input oe,
 input dout,
 output pin,
 output din
);
   SB_IO #(
       .PIN_TYPE(6'b1010_01),
       .PULLUP(1'b0)
   ) triState (
       .PACKAGE_PIN(pin),
       .OUTPUT_ENABLE(oe),
       .D_OUT_0(dout),
       .D_IN_0(din)
   );
endmodule
//---- Top entity
module v8d4ef5 #(
 parameter v5e4a03 = 'h10000
) (
 input vdd729a,
 input ve61673,
 input v7c533e,
 output [16:0] v567bdb,
 output v712cd1
);
 localparam p1 = v5e4a03;
 wire w0;
 wire w2;
 wire w3;
 wire w4;
 wire [0:16] w5;
 assign w0 = ve61673;
 assign w2 = v7c533e;
 assign w3 = vdd729a;
 assign v712cd1 = w4;
 assign v567bdb = w5;
 v8d4ef5_vbd6086 #(
  .M(p1)
 ) vbd6086 (
  .rst(w0),
  .cnt(w2),
  .clk(w3),
  .ov(w4),
  .q(w5)
 );
endmodule

/*-------------------------------------------------*/
/*-- Contador-16bits-up-rst  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Contador módulo M, ascendente, de 16 bits, con reset 
/*-------------------------------------------------*/

module v8d4ef5_vbd6086 #(
 parameter M = 0
) (
 input clk,
 input rst,
 input cnt,
 output [16:0] q,
 output ov
);
 //-- Numero de bits del contador
 localparam N = 17; 
 
 //-- En contadores de N bits:
 //-- M = 2 ** N
 
 //-- Internamente usamos un bit mas
 //-- (N+1) bits
 reg [N:0] qi = 0;
 
 always @(posedge clk)
   if (rst | ov)
     qi <= 0;
   else
     if (cnt)
       qi <= qi + 1;
       
 assign q = qi;
 
 //-- Comprobar overflow
 assign ov = (qi == M);
     
endmodule
//---- Top entity
module v958b63 #(
 parameter v16d6b8 = 1
) (
 input [15:0] v310974,
 output v18e78c
);
 localparam p1 = v16d6b8;
 wire w0;
 wire [0:15] w2;
 assign v18e78c = w0;
 assign w2 = v310974;
 v958b63_vd75681 #(
  .B(p1)
 ) vd75681 (
  .eq(w0),
  .a(w2)
 );
endmodule

/*-------------------------------------------------*/
/*-- Mayor-igual-que-1-op  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Comparador mayor o igual que, de un operando de 16 bits
/*-------------------------------------------------*/

module v958b63_vd75681 #(
 parameter B = 0
) (
 input [15:0] a,
 output eq
);
 assign eq = (a >= B);
endmodule
//---- Top entity
module v559280 #(
 parameter v42c7c5 = 'h7D,
 parameter v7575b9 = 'h7E,
 parameter v9ab44c = 'h7F
) (
 input v959b18,
 input v30fe77,
 input [7:0] v3cfc83,
 input v259f44,
 output [7:0] vd19329,
 output [7:0] v2d1a47,
 output vc76f75,
 output v44b0f1
);
 localparam p2 = v42c7c5;
 localparam p3 = v7575b9;
 localparam p4 = v9ab44c;
 wire [0:7] w0;
 wire w1;
 wire w5;
 wire w6;
 wire w7;
 wire w8;
 wire w9;
 wire w10;
 wire [0:7] w11;
 wire [0:7] w12;
 wire [0:7] w13;
 wire w14;
 wire w15;
 wire [0:7] w16;
 wire w17;
 wire w18;
 wire w19;
 wire w20;
 wire w21;
 wire [0:7] w22;
 wire w23;
 wire w24;
 assign w6 = v959b18;
 assign w7 = v959b18;
 assign w8 = v959b18;
 assign w11 = v3cfc83;
 assign w12 = v3cfc83;
 assign w13 = v3cfc83;
 assign vc76f75 = w14;
 assign vd19329 = w16;
 assign w17 = v259f44;
 assign w18 = v259f44;
 assign w19 = v259f44;
 assign w20 = v30fe77;
 assign v2d1a47 = w22;
 assign v44b0f1 = w23;
 assign w7 = w6;
 assign w8 = w6;
 assign w8 = w7;
 assign w10 = w9;
 assign w12 = w11;
 assign w13 = w11;
 assign w13 = w12;
 assign w15 = w14;
 assign w18 = w17;
 assign w19 = w17;
 assign w19 = w18;
 assign w21 = w1;
 assign w24 = w23;
 v89d234 v01e234 (
  .v39f831(w0),
  .vf892a0(w1),
  .v41eb95(w7),
  .vb1c024(w16)
 );
 v51d7d0 #(
  .v7d2543(p2)
 ) vaec009 (
  .v2de752(w0),
  .v383812(w1),
  .v877379(w6),
  .v0f713e(w9),
  .vb59e05(w12),
  .veecd0d(w18)
 );
 v51d7d0 #(
  .v7d2543(p3)
 ) vd4c608 (
  .v877379(w8),
  .v0f713e(w10),
  .vb59e05(w13),
  .veecd0d(w19),
  .v2de752(w22),
  .v383812(w23)
 );
 vca7316 #(
  .v6b316b(p4)
 ) vf30b77 (
  .v18e78c(w5),
  .v40cb98(w11)
 );
 vb2090f v1fc591 (
  .v0e28cb(w5),
  .vcbab45(w14),
  .v3ca442(w17)
 );
 v87abc9 v152b95 (
  .vcbab45(w9),
  .v132c67(w15),
  .v0e28cb(w20),
  .v3ca442(w21),
  .v814e6e(w24)
 );
endmodule

/*-------------------------------------------------*/
/*-- spi-cmd-regs  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Implementación de los 3 comandos para acceder a los registros mapeados
/*-------------------------------------------------*/
//---- Top entity
module v51d7d0 #(
 parameter v7d2543 = 'h00
) (
 input v877379,
 input v0f713e,
 input [7:0] vb59e05,
 input veecd0d,
 output [7:0] v2de752,
 output v383812
);
 localparam p0 = v7d2543;
 wire w1;
 wire [0:7] w2;
 wire w3;
 wire w4;
 wire w5;
 wire [0:7] w6;
 wire w7;
 wire [0:7] w8;
 wire w9;
 wire w10;
 wire w11;
 wire w12;
 assign w2 = vb59e05;
 assign w3 = veecd0d;
 assign v383812 = w4;
 assign w5 = v877379;
 assign v2de752 = w6;
 assign w8 = vb59e05;
 assign w11 = v0f713e;
 assign w12 = veecd0d;
 assign w7 = w1;
 assign w8 = w2;
 assign w12 = w3;
 vca7316 #(
  .v6b316b(p0)
 ) v89256f (
  .v40cb98(w2),
  .v18e78c(w9)
 );
 vb959c2 v58676d (
  .vb4c770(w1),
  .v581b48(w5),
  .ve68648(w10),
  .v3c6908(w11)
 );
 vb2090f v9e78ec (
  .v0e28cb(w1),
  .v3ca442(w3),
  .vcbab45(w4)
 );
 vdc50be v76066d (
  .v274c22(w6),
  .v76af38(w7),
  .vea7b5b(w8)
 );
 vb2090f v9aa9fb (
  .v0e28cb(w9),
  .vcbab45(w10),
  .v3ca442(w12)
 );
endmodule

/*-------------------------------------------------*/
/*-- cmd8  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Detectar el comando, y devolver los valores que llegan tras el comando
/*-------------------------------------------------*/
//---- Top entity
module vca7316 #(
 parameter v6b316b = 0
) (
 input [7:0] v40cb98,
 output v18e78c
);
 localparam p1 = v6b316b;
 wire w0;
 wire [0:7] w2;
 assign v18e78c = w0;
 assign w2 = v40cb98;
 vca7316_vd75681 #(
  .K(p1)
 ) vd75681 (
  .eq(w0),
  .a(w2)
 );
endmodule

/*-------------------------------------------------*/
/*-- Comparador  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Comparador de un operando de 8 bits. Se compara si el operando es igual al parámetro
/*-------------------------------------------------*/

module vca7316_vd75681 #(
 parameter K = 0
) (
 input [7:0] a,
 output eq
);
 assign eq = (a == K);
endmodule
//---- Top entity
module vb959c2 #(
 parameter v679341 = 0
) (
 input v581b48,
 input ve68648,
 input v3c6908,
 output vb4c770
);
 localparam p4 = v679341;
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 assign w0 = v581b48;
 assign w1 = ve68648;
 assign w2 = v3c6908;
 assign vb4c770 = w3;
 vb959c2_v4e11b3 #(
  .INI(p4)
 ) v4e11b3 (
  .clk(w0),
  .set(w1),
  .rst(w2),
  .q(w3)
 );
endmodule

/*-------------------------------------------------*/
/*-- Biestable-Set-Reset  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Biestable con entradas de Set y Reset síncronas, para poner y quitar notaficaciones de eventos
/*-------------------------------------------------*/

module vb959c2_v4e11b3 #(
 parameter INI = 0
) (
 input clk,
 input set,
 input rst,
 output q
);
 reg q = INI;
 
 always @(posedge clk)
   if (set)
     q <= 1'b1;
   else if (rst)
     q<=1'b0;
endmodule
//---- Top entity
module vdc50be (
 input [7:0] vea7b5b,
 input v76af38,
 output [7:0] v274c22
);
 wire w0;
 wire [0:7] w1;
 wire [0:7] w2;
 assign w0 = v76af38;
 assign w1 = vea7b5b;
 assign v274c22 = w2;
 vdc50be_vce9fab vce9fab (
  .b(w0),
  .a(w1),
  .o(w2)
 );
endmodule

/*-------------------------------------------------*/
/*-- AND-8-1  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Habilitación de bus de 8 bits
/*-------------------------------------------------*/

module vdc50be_vce9fab (
 input [7:0] a,
 input b,
 output [7:0] o
);
 assign o[0] = a[0] & b;
 assign o[1] = a[1] & b;
 assign o[2] = a[2] & b;
 assign o[3] = a[3] & b;
 assign o[4] = a[4] & b;
 assign o[5] = a[5] & b;
 assign o[6] = a[6] & b;
 assign o[7] = a[7] & b;
endmodule
//---- Top entity
module v87abc9 (
 input v0e28cb,
 input v3ca442,
 input v132c67,
 input v814e6e,
 output vcbab45
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 wire w4;
 assign w0 = v0e28cb;
 assign w1 = v3ca442;
 assign vcbab45 = w2;
 assign w3 = v132c67;
 assign w4 = v814e6e;
 v87abc9_vf4938a vf4938a (
  .a(w0),
  .b(w1),
  .o(w2),
  .c(w3),
  .d(w4)
 );
endmodule

/*-------------------------------------------------*/
/*-- OR-4  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Puerta OR de 4 entradas
/*-------------------------------------------------*/

module v87abc9_vf4938a (
 input a,
 input b,
 input c,
 input d,
 output o
);
 //-- Puerta OR
 
 //-- module and (input wire a, input wire b,
 //--             output wire c);
 
 assign o = a | b | c | d;
 
 //-- endmodule
endmodule
//---- Top entity
module v1b3913 (
 input ved8395,
 input ve78ab8,
 output v3487af
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 wire w4;
 wire w5;
 assign w0 = ve78ab8;
 assign w1 = ved8395;
 assign w4 = ve78ab8;
 assign v3487af = w5;
 assign w4 = w0;
 v1c7dae vbf8366 (
  .vf54559(w0),
  .va4102a(w1),
  .ve8318d(w2)
 );
 v35f267 v5053a8 (
  .v0e28cb(w2),
  .vcbab45(w3)
 );
 vb2090f v758f4d (
  .v0e28cb(w3),
  .v3ca442(w4),
  .vcbab45(w5)
 );
endmodule

/*-------------------------------------------------*/
/*-- Subida  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Detector de flanco de subida. Emite un tic cuando detecta un flanco de subida. Versión bloques
/*-------------------------------------------------*/
//---- Top entity
module va2a3e2 #(
 parameter vafbb99 = 'h00,
 parameter v52eb18 = 0
) (
 input v8a8aab,
 input [7:0] v3c6759,
 input [7:0] v1bec6c,
 input vc186e3,
 output [7:0] v4daed0,
 output v8badf8
);
 localparam p0 = vafbb99;
 localparam p3 = v52eb18;
 wire w1;
 wire w2;
 wire [0:7] w4;
 wire w5;
 wire [0:7] w6;
 wire w7;
 wire w8;
 wire [0:7] w9;
 assign w4 = v3c6759;
 assign w5 = vc186e3;
 assign v4daed0 = w6;
 assign w7 = v8a8aab;
 assign v8badf8 = w8;
 assign w9 = v1bec6c;
 assign w8 = w2;
 v89d234 #(
  .v422d28(p3)
 ) va4a6f2 (
  .vf892a0(w1),
  .vb1c024(w6),
  .v41eb95(w7),
  .v39f831(w9)
 );
 vca7316 #(
  .v6b316b(p0)
 ) v568c3a (
  .v18e78c(w2),
  .v40cb98(w4)
 );
 vb2090f v35d503 (
  .vcbab45(w1),
  .v0e28cb(w2),
  .v3ca442(w5)
 );
endmodule

/*-------------------------------------------------*/
/*-- reg-addr  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Registro mapeado en una dirección de memoria
/*-------------------------------------------------*/
//---- Top entity
module v1e224f (
 input [7:0] v385b9c,
 input [7:0] vd34531,
 output [15:0] v4d4dee
);
 wire [0:7] w0;
 wire [0:7] w1;
 wire [0:15] w2;
 assign w0 = vd34531;
 assign w1 = v385b9c;
 assign v4d4dee = w2;
 v1e224f_v9a2a06 v9a2a06 (
  .i0(w0),
  .i1(w1),
  .o(w2)
 );
endmodule

/*-------------------------------------------------*/
/*-- Agregador-bus  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Agregador de 2 buses de 8-bits a bus de 16-bits
/*-------------------------------------------------*/

module v1e224f_v9a2a06 (
 input [7:0] i1,
 input [7:0] i0,
 output [15:0] o
);
 assign o = {i1, i0};
 
endmodule
//---- Top entity
module vec5121 #(
 parameter vaf1d6e = 0
) (
 input [7:0] vdf5b7a,
 output v7ff276
);
 localparam p0 = vaf1d6e;
 wire w1;
 wire [0:7] w2;
 assign v7ff276 = w1;
 assign w2 = vdf5b7a;
 vec5121_vd80544 #(
  .BIT(p0)
 ) vd80544 (
  .o(w1),
  .i(w2)
 );
endmodule

/*-------------------------------------------------*/
/*-- Extract-1-bit  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Extractor de 1 bit de un bus de 8 bits
/*-------------------------------------------------*/

module vec5121_vd80544 #(
 parameter BIT = 0
) (
 input [7:0] i,
 output o
);
 assign o = i[BIT];
endmodule
//---- Top entity
module v6c897b #(
 parameter v739e20 = 16
) (
 input [16:0] v043efe,
 output v182382
);
 localparam p2 = v739e20;
 wire [0:16] w0;
 wire w1;
 assign w0 = v043efe;
 assign v182382 = w1;
 v6c897b_va6faa5 #(
  .bit(p2)
 ) va6faa5 (
  .i(w0),
  .o(w1)
 );
endmodule

/*-------------------------------------------------*/
/*-- Extractor-bus-1bit-de-17bits  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Extractor de bus de 1bit de uno de 17bits
/*-------------------------------------------------*/

module v6c897b_va6faa5 #(
 parameter bit = 0
) (
 input [16:0] i,
 output o
);
 assign o = i[16];
endmodule
//---- Top entity
module v6348d5 (
 input [6:0] vcff9d0,
 input v428b2b,
 output [7:0] v869a97
);
 wire [0:6] w0;
 wire w1;
 wire [0:7] w2;
 assign w0 = vcff9d0;
 assign w1 = v428b2b;
 assign v869a97 = w2;
 v6348d5_v9a2a06 v9a2a06 (
  .i1(w0),
  .i0(w1),
  .o(w2)
 );
endmodule

/*-------------------------------------------------*/
/*-- Agregador-bus  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Agregador de un bus de 7 bits y un cable a bus de 8-bits
/*-------------------------------------------------*/

module v6348d5_v9a2a06 (
 input [6:0] i1,
 input i0,
 output [7:0] o
);
 assign o = {i1, i0};
 
endmodule
//---- Top entity
module v3806a2 (
 input v1bb711,
 output [6:0] v1438d5
);
 wire w0;
 wire [0:6] w1;
 assign w0 = v1bb711;
 assign v1438d5 = w1;
 v3806a2_v9e01be v9e01be (
  .i(w0),
  .o(w1)
 );
endmodule

/*-------------------------------------------------*/
/*-- mult-1-7-bus  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Multiplicador de cables. Genera un bus de 7 bits, a patir del bit de entrada
/*-------------------------------------------------*/

module v3806a2_v9e01be (
 input i,
 output [6:0] o
);
 assign o = {7{i}};
 
endmodule
//---- Top entity
module v49d51e (
 input [7:0] v732d31,
 input [7:0] vb4ed69,
 input [7:0] vd48707,
 input [7:0] vb6bab2,
 input [7:0] v3f3f35,
 input [7:0] vcd2a33,
 input [7:0] v31c944,
 input [7:0] v06410a,
 input [7:0] v71c62f,
 input [7:0] va541fd,
 input [7:0] v9b8a50,
 input [7:0] v30db33,
 input [7:0] vbdd51f,
 input [7:0] v21e136,
 input [7:0] v062092,
 input [7:0] v3d1227,
 input [3:0] ve81325,
 output [7:0] v3fb88b
);
 wire [0:7] w0;
 wire [0:7] w1;
 wire [0:7] w2;
 wire [0:7] w3;
 wire [0:7] w4;
 wire [0:7] w5;
 wire [0:7] w6;
 wire [0:7] w7;
 wire [0:7] w8;
 wire [0:7] w9;
 wire [0:7] w10;
 wire [0:7] w11;
 wire [0:7] w12;
 wire [0:7] w13;
 wire [0:7] w14;
 wire [0:7] w15;
 wire [0:7] w16;
 wire [0:3] w17;
 assign v3fb88b = w0;
 assign w1 = v062092;
 assign w2 = v3d1227;
 assign w3 = v21e136;
 assign w4 = vbdd51f;
 assign w5 = v30db33;
 assign w6 = v71c62f;
 assign w7 = va541fd;
 assign w8 = v9b8a50;
 assign w9 = v06410a;
 assign w10 = v31c944;
 assign w11 = vcd2a33;
 assign w12 = v3f3f35;
 assign w13 = vb6bab2;
 assign w14 = vd48707;
 assign w15 = vb4ed69;
 assign w16 = v732d31;
 assign w17 = ve81325;
 v49d51e_ve4e0df ve4e0df (
  .o(w0),
  .i1(w1),
  .i0(w2),
  .i2(w3),
  .i3(w4),
  .i4(w5),
  .i7(w6),
  .i6(w7),
  .i5(w8),
  .i8(w9),
  .i9(w10),
  .i10(w11),
  .i11(w12),
  .i12(w13),
  .i13(w14),
  .i14(w15),
  .i15(w16),
  .s(w17)
 );
endmodule

/*-------------------------------------------------*/
/*-- Mux-16-1- 8bits  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Multiplexor de 16 a 1 de 8 bits
/*-------------------------------------------------*/

module v49d51e_ve4e0df (
 input [7:0] i15,
 input [7:0] i14,
 input [7:0] i13,
 input [7:0] i12,
 input [7:0] i11,
 input [7:0] i10,
 input [7:0] i9,
 input [7:0] i8,
 input [7:0] i7,
 input [7:0] i6,
 input [7:0] i5,
 input [7:0] i4,
 input [7:0] i3,
 input [7:0] i2,
 input [7:0] i1,
 input [7:0] i0,
 input [3:0] s,
 output [7:0] o
);
 //-- Multiplexor de 16 a 1, 
 //-- de 8 bits
 
 assign o = (s == 4'h0) ? i0 :
            (s == 4'h1) ? i1 :
            (s == 4'h2) ? i2 : 
            (s == 4'h3) ? i3 :
            (s == 4'h4) ? i4 :
            (s == 4'h5) ? i5 :
            (s == 4'h6) ? i6 :
            (s == 4'h7) ? i7 :
            (s == 4'h8) ? i8 :
            (s == 4'h9) ? i9 :
            (s == 4'ha) ? i10 : 
            (s == 4'hb) ? i11 :
            (s == 4'hc) ? i12 :
            (s == 4'hd) ? i13 :
            (s == 4'he) ? i14 :
            (s == 4'hf) ? i15 :
            4'h0;
            
 
 
endmodule
//---- Top entity
module vb462e4 (
 input v5d4ab5,
 input vd30424,
 input v684eff,
 input v9a20a6,
 input v8fc551,
 input v2b3528,
 input v7d69a8,
 input v94931a,
 input v9cada5,
 input v19749c,
 input vaedeed,
 input veb3957,
 input vaf960e,
 input v7d2dbf,
 input v392f5c,
 input v35bfa0,
 output v2d9b9d,
 output v4ad97f,
 output va7d459,
 output ve45ae4,
 output va21f9e
);
 wire [0:3] w0;
 wire [0:1] w1;
 wire w2;
 wire w3;
 wire w4;
 wire w5;
 wire w6;
 wire w7;
 wire w8;
 wire w9;
 wire w10;
 wire w11;
 wire w12;
 wire w13;
 wire w14;
 wire w15;
 wire w16;
 wire w17;
 wire w18;
 wire w19;
 wire w20;
 wire w21;
 wire w22;
 assign v2d9b9d = w2;
 assign v4ad97f = w3;
 assign va7d459 = w4;
 assign ve45ae4 = w5;
 assign w6 = v5d4ab5;
 assign w7 = vd30424;
 assign w8 = v684eff;
 assign w9 = v9a20a6;
 assign w10 = v8fc551;
 assign w11 = v2b3528;
 assign w12 = v7d69a8;
 assign w13 = v94931a;
 assign w14 = v9cada5;
 assign w15 = v19749c;
 assign w16 = vaedeed;
 assign w17 = veb3957;
 assign w18 = vaf960e;
 assign w19 = v7d2dbf;
 assign w20 = v392f5c;
 assign w21 = v35bfa0;
 assign va21f9e = w22;
 v51d4a7 v551e0f (
  .vd968fd(w0),
  .v05829a(w1),
  .va21f9e(w22)
 );
 v80e990 v482675 (
  .v05829a(w0),
  .v5d4ab5(w6),
  .vd30424(w7),
  .v684eff(w8),
  .v9a20a6(w9),
  .v8fc551(w10),
  .v2b3528(w11),
  .v7d69a8(w12),
  .v94931a(w13),
  .v9cada5(w14),
  .v19749c(w15),
  .vaedeed(w16),
  .veb3957(w17),
  .vaf960e(w18),
  .v7d2dbf(w19),
  .v392f5c(w20),
  .v35bfa0(w21)
 );
 vd5daa4 v1663c1 (
  .v2fcb73(w1),
  .v2d9b9d(w2),
  .v4ad97f(w3),
  .va7d459(w4),
  .ve45ae4(w5)
 );
endmodule

/*-------------------------------------------------*/
/*-- Codificador 16/4  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Codificador de 16 entradas y 4 salidas
/*-------------------------------------------------*/
//---- Top entity
module v51d4a7 (
 input [15:0] vd968fd,
 output [3:0] v05829a,
 output va21f9e
);
 wire [0:15] w0;
 wire [0:3] w1;
 wire w2;
 assign w0 = vd968fd;
 assign v05829a = w1;
 assign va21f9e = w2;
 v51d4a7_ve3c61c ve3c61c (
  .i(w0),
  .o(w1),
  .g(w2)
 );
endmodule

/*-------------------------------------------------*/
/*-- Codificador 16/4 Bus  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Codificador de 16 entradas y 4 salidas (usando buses)
/*-------------------------------------------------*/

module v51d4a7_ve3c61c (
 input [15:0] i,
 output [3:0] o,
 output g
);
 localparam N=4;
 
 reg [2**N-1:0] o_aux;
 reg g_aux;
 
 integer j;
 always @(*)
 begin
    o_aux <= 0;
    g_aux <= 1'b0;
    for (j=0; j<2**N; j=j+1)
       begin
       if (i[j])
          begin
          o_aux <= j;
          g_aux <= 1'b1;
          end
       end
 end
 
 assign o=o_aux;
 assign g=g_aux;
endmodule
//---- Top entity
module v80e990 (
 input v5d4ab5,
 input vd30424,
 input v684eff,
 input v9a20a6,
 input v8fc551,
 input v2b3528,
 input v7d69a8,
 input v94931a,
 input v9cada5,
 input v19749c,
 input vaedeed,
 input veb3957,
 input vaf960e,
 input v7d2dbf,
 input v392f5c,
 input v35bfa0,
 output [15:0] v05829a
);
 wire [0:15] w0;
 wire w1;
 wire w2;
 wire w3;
 wire w4;
 wire w5;
 wire w6;
 wire w7;
 wire w8;
 wire w9;
 wire w10;
 wire w11;
 wire w12;
 wire w13;
 wire w14;
 wire w15;
 wire w16;
 assign v05829a = w0;
 assign w1 = v5d4ab5;
 assign w2 = vd30424;
 assign w3 = v684eff;
 assign w4 = v9a20a6;
 assign w5 = v8fc551;
 assign w6 = v2b3528;
 assign w7 = v7d69a8;
 assign w8 = v94931a;
 assign w9 = v9cada5;
 assign w10 = v19749c;
 assign w11 = vaedeed;
 assign w12 = veb3957;
 assign w13 = vaf960e;
 assign w14 = v7d2dbf;
 assign w15 = v392f5c;
 assign w16 = v35bfa0;
 v80e990_v402662 v402662 (
  .o(w0),
  .i15(w1),
  .i14(w2),
  .i13(w3),
  .i12(w4),
  .i11(w5),
  .i10(w6),
  .i9(w7),
  .i8(w8),
  .i7(w9),
  .i6(w10),
  .i5(w11),
  .i4(w12),
  .i3(w13),
  .i2(w14),
  .i1(w15),
  .i0(w16)
 );
endmodule

/*-------------------------------------------------*/
/*-- Join (wires -> 16)  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Agregador de 16 bits a 1 bus
/*-------------------------------------------------*/

module v80e990_v402662 (
 input i15,
 input i14,
 input i13,
 input i12,
 input i11,
 input i10,
 input i9,
 input i8,
 input i7,
 input i6,
 input i5,
 input i4,
 input i3,
 input i2,
 input i1,
 input i0,
 output [15:0] o
);
 assign o={i15,i14,i13,i12,i11,i10,i9,i8,i7,i6,i5,i4,i3,i2,i1,i0};
 
endmodule
//---- Top entity
module vd5daa4 (
 input [3:0] v2fcb73,
 output v2d9b9d,
 output v4ad97f,
 output va7d459,
 output ve45ae4
);
 wire [0:3] w0;
 wire w1;
 wire w2;
 wire w3;
 wire w4;
 assign w0 = v2fcb73;
 assign v2d9b9d = w1;
 assign v4ad97f = w2;
 assign va7d459 = w3;
 assign ve45ae4 = w4;
 vd5daa4_v402662 v402662 (
  .i(w0),
  .o3(w1),
  .o2(w2),
  .o1(w3),
  .o0(w4)
 );
endmodule

/*-------------------------------------------------*/
/*-- Split (4 -> wires)  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Separador de 1 bus de 4 bits a bits
/*-------------------------------------------------*/

module vd5daa4_v402662 (
 input [3:0] i,
 output o3,
 output o2,
 output o1,
 output o0
);
 assign o3=i[3];
 assign o2=i[2];
 assign o1=i[1];
 assign o0=i[0];
 
endmodule
//---- Top entity
module v2d3bcd (
 input v6bcf15,
 input vaba134,
 input v340700,
 input vd4cf0c,
 output [3:0] vd9c4aa
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 wire [0:3] w4;
 assign w0 = vaba134;
 assign w1 = v340700;
 assign w2 = vd4cf0c;
 assign w3 = v6bcf15;
 assign vd9c4aa = w4;
 v2d3bcd_v89b409 v89b409 (
  .i2(w0),
  .i1(w1),
  .i0(w2),
  .i3(w3),
  .o(w4)
 );
endmodule

/*-------------------------------------------------*/
/*-- Join 4 (1/1/1/1 -> 4)  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Agregador de 4 buses de 1/1/1/1 bits a 1 bus de 4 bits
/*-------------------------------------------------*/

module v2d3bcd_v89b409 (
 input i3,
 input i2,
 input i1,
 input i0,
 output [3:0] o
);
 assign o={i3,i2,i1,i0};
 
endmodule
//---- Top entity
module v359a55 (
 input [7:0] v02d898,
 input [7:0] vd6b984,
 input v50d6c6,
 output [7:0] vf24dba
);
 wire w0;
 wire [0:7] w1;
 wire [0:7] w2;
 wire [0:7] w3;
 assign w0 = v50d6c6;
 assign w1 = vd6b984;
 assign w2 = v02d898;
 assign vf24dba = w3;
 v359a55_ve4e0df ve4e0df (
  .sel(w0),
  .i0(w1),
  .i1(w2),
  .o(w3)
 );
endmodule

/*-------------------------------------------------*/
/*-- Mux 2 a 1 de 8 bits  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Multiplexor de 2 a 1 de 8 bits
/*-------------------------------------------------*/

module v359a55_ve4e0df (
 input [7:0] i1,
 input [7:0] i0,
 input sel,
 output [7:0] o
);
 //-- Multiplexor de 2 a 1, 
 //-- de 8 bits
 
 reg [7:0] o;
 
 always @(*) begin
     case(sel)
         0: o = i0;
         1: o = i1;
         default: o = i0;
     endcase
 end
 
 
endmodule

module main_vdb8693 #(
 parameter B = 0
) (
 input [16:0] a,
 output sal
);
 assign sal = (a >= B);
endmodule

module main_vcb2712 (
 input reseteo,
 input subida,
 output [16:0] sal
);
 
 reg [16:0] q = 0;
 
 always @(posedge subida)
     if(reseteo)
     q<=0;
     else
     q <= q + 1;
 assign sal=q;
endmodule

module main_v068e44 (
 input reset,
 input ready,
 output [16:0] Ndato
);
 reg [16:0]cuenta;
 always@(posedge ready)begin
 cuenta<=cuenta+1;
 if (reset==1)
 cuenta<=0;
 else 
 cuenta<=cuenta+1;
 end
 assign Ndato=cuenta;
endmodule

module main_v2cbf8c #(
 parameter B = 0
) (
 input [16:0] a,
 output sal
);
 assign sal = (a >= B);
endmodule

module main_v6667aa (
 input [16:0] A,
 output [7:0] Sal
);
 assign Sal = A[7:0];
endmodule

module main_v7145e0 (
 input [16:0] A,
 output [7:0] Sal
);
 assign Sal = A[15:8];
endmodule

module main_v349d76 #(
 parameter B = 0
) (
 input [16:0] a,
 output sal
);
 assign sal = (a >= B);
endmodule

module main_v5f5cd8 (
 input [16:0] A,
 output [7:0] Sal
);
 assign Sal = A[7:0];
endmodule

module main_v55e614 (
 input [16:0] A,
 output [7:0] Sal
);
 assign Sal = A[15:8];
endmodule

module main_v0b670a (
 output [7:0] Char
);
 reg [7:0] char=8'hFF;
 assign Char=char;
endmodule
